[tool.poetry]
name = "django-react"
version = "0.1.0"
description = ""
authors = ["VCBorges <vinicius.costa.borges98@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.11"
pytest-django = "^4.7.0"
rich = "^13.7.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
python_files = ["test_*.py"]


[tool.ruff]
exclude = [
    ".venv",
    "node_modules"
]

# Same as Black.
line-length = 88

# Assume Python 3.8
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4", 
    "E7", 
    "E9", 
    "F",
    "I",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"  

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# [tool.ruff.isort]
# known-third-party = [
#     "dynaconf",
# ]